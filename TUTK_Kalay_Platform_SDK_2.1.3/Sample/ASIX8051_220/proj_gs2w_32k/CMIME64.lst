C51 COMPILER V9.01   CMIME64                                                               03/08/2012 11:01:11 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CMIME64
OBJECT MODULE PLACED IN .\CMIME64.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\msmtpc\CMIME64.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X8020) INCDI
                    -R(..\src\main;..\src\mcpu;..\src\mswdma;..\src\uart0;..\src\mmstimer;..\src\mwif;..\src\madapter;..\src\mtcpip;..\src\mp
                    -ing;..\src\mpppoe;..\src\si2c;..\src\mdnsc;..\src\mconsole;..\src\mtelnet;..\src\meeprom;..\src\mmac;..\src\mdhcpc;..\sr
                    -c\mhttp;..\src\mgs2wifi;..\src\mhsuart;..\src\msmtpc;..\src\web_page;..\src\mdhcps;..\src\mdebug) DEFINE(RuntimeCodeAt32
                    -KH) VARBANKING DEBUG PRINT(.\CMIME64.lst) OBJECT(.\CMIME64.obj)

line level    source

   1          /*
   2          *********************************************************************************
   3          *     Copyright (c) 2010   ASIX Electronic Corporation      All rights reserved.
   4          *
   5          *     This is unpublished proprietary source code of ASIX Electronic Corporation
   6          *
   7          *     The copyright notice above does not evidence any actual or intended
   8          *     publication of such source code.
   9          *********************************************************************************
  10          */
  11          /*============================================================================
  12           * Module name: cmime64.c
  13           * Purpose:     Multipurpos Internet Mail Extensions process.
  14           * Author:
  15           * Date:
  16           * Notes:
  17           * $Log: CMIME64.c,v $
  18           *
  19           *=============================================================================
  20           */
  21          
  22          /* INCLUDE FILE DECLARATIONS */
  23          #include "types.h"
  24          
  25          // Global variable
  26          extern S8_T     XDATA   each3toc;               /* Buffer each 3 byte to coding Base64 format*/
  27          extern S8_T     XDATA   b64[4];                 /* memory output 4 base64 data*/
  28          
  29          /* LOCAL VARIABLE DECLARATIONS */
  30          U32_T buffer24;         /* recode the buffer 24 bits */
  31          
  32          
  33          /*--------------------------------------------------------------------------*
  34           * Initialization of the coder.                                             *
  35           *--------------------------------------------------------------------------*/
  36          void Cmime64_Init(void)
  37          {
  38   1              each3toc = 0;
  39   1              buffer24 = 0;
  40   1      
  41   1      } /* End of Cmime64_Init() */
  42          
  43          void cmime64(S8_T* pindata)
  44          {
  45   1        U32_T buffer;
  46   1        U32_T buffer_out;
  47   1        S8_T          indata;
  48   1        S8_T          cvtb64[4];
  49   1      
  50   1        U32_T         i;
  51   1        indata = *pindata;
C51 COMPILER V9.01   CMIME64                                                               03/08/2012 11:01:11 PAGE 2   

  52   1        buffer = (U32_T)indata & 0xFF;
  53   1        buffer <<= ((2-each3toc)*8);          //first-in source data keep in MSB
  54   1        buffer24 |= buffer;
  55   1      
  56   1        if(each3toc == 2)
  57   1        {
  58   2              for(i=0;i<4;i++)
  59   2              {
  60   3                      buffer_out = buffer24>>(i*6);//encode LSB to b64[first==>0..3]array
  61   3                      b64[i] = (S8_T)buffer_out&0x3F;
  62   3                      cvtb64[i] = b64[i];
  63   3                      if (cvtb64[i] <= 0x19 )
  64   3                         b64[i] += 65;
  65   3      
  66   3                      if ( (cvtb64[i] > 0x19 ) && (cvtb64[i] <= 0x33) )
  67   3                         b64[i] += 71;        //(97-26)
  68   3      
  69   3                      if ( (cvtb64[i] > 0x33 ) && (cvtb64[i] <= 0x3d) )
  70   3                         b64[i] -= 4;
  71   3      
  72   3                      if ( cvtb64[i] == 0x3e )
  73   3                         b64[i] = '+';
  74   3                      if ( cvtb64[i] == 0x3f )
  75   3                         b64[i] = '/';
  76   3              }
  77   2              buffer24 = 0;
  78   2        }
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    580    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
