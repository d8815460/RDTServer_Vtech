C51 COMPILER V9.01   MCPU                                                                  08/29/2011 15:27:50 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MCPU
OBJECT MODULE PLACED IN .\mcpu.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe ..\src\mcpu\mcpu.c LARGE OMF2 ROM(D16M) BROWSE INTVECTOR(0X8020) INCDIR(..\
                    -src\main;..\src\mcpu;..\src\mswdma;..\src\uart0;..\src\mmstimer;..\src\mwif;..\src\madapter;..\src\mtcpip;..\src\mping;.
                    -.\src\mpppoe;..\src\si2c;..\src\mdnsc;..\src\mconsole;..\src\mtelnet;..\src\meeprom;..\src\mmac;..\src\mdhcpc;..\src\mht
                    -tp;..\src\mgs2wifi;..\src\mhsuart;..\src\msmtpc;..\src\web_page;..\src\mdhcps;..\src\mdebug;..\..\..\Include;..\..\..\Bu
                    -ild\ASIX8051_220\) DEFINE(RuntimeCodeAt32KH) VARBANKING DEBUG PRINT(.\output\mcpu.lst) OBJECT(.\mcpu.obj)

line level    source

   1          /*
   2           *********************************************************************************
   3           *     Copyright (c) 2010   ASIX Electronic Corporation      All rights reserved.
   4           *
   5           *     This is unpublished proprietary source code of ASIX Electronic Corporation
   6           *
   7           *     The copyright notice above does not evidence any actual or intended
   8           *     publication of such source code.
   9           *********************************************************************************
  10           */
  11          /*================================================================================
  12           * Module Name : mcpu.c
  13           * Purpose     : Initialization and globe values setting.
  14           * Author      : Robin Lee
  15           * Date        :
  16           * Notes       : In the initial function, all external interrupt are disable in
  17           *               default. User must enable a specific interrupt in its module.
  18           *               Several system values are initial in beginning
  19           * $Log: mcpu.c,v $
  20           * no message
  21           *
  22           *================================================================================
  23           */
  24          
  25          /* INCLUDE FILE DECLARATIONS */
  26          #include        "ax22000.h"
  27          #include        "types.h"
  28          #include        "mcpu_cfg.h"
  29          #include        "mcpu.h"
  30          #include        "interrupt.h"
  31          #include        "mac.h"
  32          #include        "mpsave.h"
  33          
  34          /* GLOBAL VARIABLES DECLARATIONS */
  35          U8_T    MCPU_WcpuReady = 0;
  36          U8_T    MCPU_SleepFlag = 0;
  37          U8_T    MCPU_WakeUpEventTable = 0;
  38          U8_T    MCPU_MacWakeUpEventTable = 0;
  39          U8_T    MCPU_WakeUpByMacFlag = 0;
  40          U8_T    MCPU_PowerSavingMode = 0;
  41          U8_T    MCPU_McpuNotSleepFlag = 0;
  42          U8_T    MCPU_NoCfgEeprom = 0;
  43          U8_T    MCPU_CpuSysClk = 0;
  44          U8_T    MCPU_MemShadow = 0;
  45          U8_T    MCPU_ProgWtst = 0;
  46          U8_T    MCPU_DataStretch = 0;
  47          U8_T    MCPU_GlobeInt = 0;
  48          
  49          U8_T IDATA      MCPU_ExecuteRuntimeFlag _at_ 0x30;
  50          
  51          
C51 COMPILER V9.01   MCPU                                                                  08/29/2011 15:27:50 PAGE 2   

  52          /* STATIC VARIABLE DECLARATIONS */
  53          static U8_T data MCPU_ReservedForStackPoint[2] _at_ 0x0d;
  54          
  55          /* LOCAL SUBPROGRAM DECLARATIONS */
  56          
  57          
  58          /* LOCAL SUBPROGRAM BODIES */
  59          
  60          
  61          /* EXPORTED SUBPROGRAM BODIES */
  62          
  63          /*
  64           *--------------------------------------------------------------------------------
  65           * void MCPU_Init(void)
  66           * Purpose : This function initializes AX220xx CPU Core for the whole system operation.
  67                       AX220xx supports 2 clock rates of 40MHz and 80MHz.
  68                                   The Program Wait State and Data Stretch Cycle are configured via
  69                                   different clock rates and the Memory Shadow Mode as below table,
  70                                   the range of both the Program Wait State and the Data Stretch Cycle are 0 ~7.
  71                                   All AX220xx external interrupts are disabled during AX220xx system initialization.
  72           * Params  : None
  73           * Returns : None
  74           * Note    : None
  75           *--------------------------------------------------------------------------------
  76           */
  77          void MCPU_Init(void)
  78          {
  79   1              EA = 0; // turn off globe interrupt
  80   1      
  81   1              P0 = 0xFF;
  82   1              P1 = 0xFF;
  83   1              P2 = 0xFF;
  84   1              P3 = 0xFF;
  85   1      
  86   1              MCPU_NoCfgEeprom = (CSREPR & ICD) ? 1 : 0;
  87   1      
  88   1              /* Check program wait-state and data memory wait-state */
  89   1              MCPU_MemShadow = (CSREPR & PMS) ? 1 : 0;
  90   1      
  91   1              switch (CSREPR & BIT7)
  92   1              {
  93   2                      case SCS_80M :
  94   2                              MCPU_CpuSysClk = SCS_80M;
  95   2                              WTST = 0x05;
  96   2                              CKCON = 0x01;
  97   2                              break;
  98   2                      case SCS_40M :
  99   2                              MCPU_CpuSysClk = SCS_40M;
 100   2                              WTST = 0x02;
 101   2                              CKCON = 0x01;
 102   2                              break;
 103   2                      default :
 104   2                              MCPU_CpuSysClk = SCS_40M;
 105   2                              WTST = 0x02;
 106   2                              CKCON = 0x01;
 107   2                              break;
 108   2              }
 109   1      
 110   1              MCPU_ProgWtst = WTST & 0x07;
 111   1              MCPU_DataStretch = CKCON & 0x07;
 112   1      
 113   1              PCON    &= ~SWB_;       // Turn off switchback function.
C51 COMPILER V9.01   MCPU                                                                  08/29/2011 15:27:50 PAGE 3   

 114   1      
 115   1              /* Clear the INT5F & INT6F of Interrupt5 & interrupt6 (write 1 to clear) */
 116   1              EIF             = INT5F;        // Clear the flag of interrupt 5.
 117   1              EIF             = INT6F;        // Clear the flag of interrupt 6.
 118   1              
 119   1              if (WTRF)
 120   1              {
 121   2                      TA = 0xAA;
 122   2                      TA = 0x55;
 123   2                      WTRF = 0;       // Clear Watch Dog Time Out Reset Flag.
 124   2                      CSREPR |= SW_RBT;
 125   2              }
 126   1      
 127   1              /* Disable all external interrupts */
 128   1              EXTINT0(OFF);           // EINT0 interrupt.
 129   1              EXTINT1(OFF);           // EINT1 interrupt.
 130   1              EXTINT2(OFF);           // EINT2 interrupt for commands between MCPU & WCPU
 131   1              EXTINT3(OFF);           // EINT3 interrupt for PCA.
 132   1              EXTINT4(OFF);           // EINT4 interrupt for peripheral device.
 133   1              EXTINT5(OFF);           // EINT5 interrupt for Flash, RTC, software DMA and software Timer.
 134   1              EXTINT6(OFF);           // EINT6 interrupt for wake-up of power management mode and stop mode.
 135   1      
 136   1              if (MCPU_GlobeInt & BIT7)
 137   1                      EA = MCPU_GlobeInt & BIT0;
 138   1              else
 139   1                      EA = 1;                 // Enable the globe interrupt.
 140   1      
 141   1      } /* End of MCPU_Init() */
 142          
 143          #if AX_WATCHDOG_INT_ENB
              /*
               *--------------------------------------------------------------------------------
               * void MCPU_WatchDogSetting(U8_T wdIntrEnb, U8_T wdRstEnb, U8_T wdPrty, U8_T wdTime)
               * Purpose : Configure the Watchdog Timer function of AX220xx MCPU sub-system.
               * Params  : wdIntrEnb : Enable / Disable a Watchdog Timer.
                                       wdRstEnb : Enable / Disable a Watchdog Timer counter reset.
                                                  Enable this will reset the MCPU core when a watchdog timeout occurred.
                                       wdPrty : Enable / Disable the Watchdog Priority.
                                       wdTime : Set the Watchdog Timer Timeout value.
               * Returns : None
               * Note    : None
               *--------------------------------------------------------------------------------
               */
              void MCPU_WatchDogSetting(U8_T wdIntrEnb, U8_T wdRstEnb, U8_T wdPrty, U8_T wdTime)
              {
                      CKCON |= wdTime;
              
                      if (wdIntrEnb & WD_INTR_ENABLE)
                      {
                              EWDI = 1;
                      }
                      else
                      {
                              EWDI = 0;
                      }
              
                      if (wdRstEnb & WD_RESET_ENABLE)
                      {
                              TA = 0xAA;
                              TA = 0x55;
                              EWT = 1;
                      }
C51 COMPILER V9.01   MCPU                                                                  08/29/2011 15:27:50 PAGE 4   

                      else
                      {
                              TA = 0xAA;
                              TA = 0x55;
                              EWT = 0;
                      }
              
                      if (wdPrty & WD_HIGH_PRIORITY)
                      {
                              PWDI = 1;
                      }
                      else
                      {
                              PWDI = 0;
                      }
                      
                      TA = 0xAA;
                      TA = 0x55;
                      RWT = 1;
                      WTRF = 0;
                      WDIF = 0;
              }
              #endif //AX_WATCHDOG_INT_ENB
 199          
 200          
 201          /* End of mcpu.c */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    148    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     13    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
